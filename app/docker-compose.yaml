services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: petdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d petdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      consul-servers_consul-nw:
        ipv4_address: 10.100.10.10

  api:
    build: ./api
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: petdb
      POSTGRES_HOST: db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_started  # Changed from service_healthy to allow API to start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      consul-servers_consul-nw:
        ipv4_address: 10.100.10.11

  frontend:
    build: 
      context: ./frontend
      args:
        API_BASE_URL: http://localhost:8000
        HASHI_PRODUCT: consul
        HASHI_VERSION: 1.21.0
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      consul-servers_consul-nw:
        ipv4_address: 10.100.10.12

volumes:
  db_data:

networks:
  consul-servers_consul-nw:
    external: true

# networks:
#   consul-servers_consul-nw:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 10.100.0.0/16